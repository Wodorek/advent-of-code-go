{

	"Boilerplate": {
		"prefix": ["boil","goboil"],
		"body": [
			"package main",
			"",
"import (",
"_ \"embed\"",
"",
	"\"github.com/wodorek/advent-of-code-go/util\"",
")",
"",
"//go:embed input.txt",
"var input string",
"",
"func main() {",
"inputArr := parseInput(input)",
"util.PrintSolution(1, p1(inputArr))",
"util.PrintSolution(2, p2(inputArr))",
"}",
"",
"func p1(inputArr [][]string) string {",
"return \"\"",
"}",
"",
"func p2(inputArr [][]string) string {",
"return \"\"",
"}",
"",
"func parseInput(inputString string) [][]string {",
"return nil",
"}"
		],
		"scope": "go,golang"
	}
	// Place your advent-of-code-go workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
}